/*!
 * Socky JavaScript Library
 *
 * @version 0.5.0-pre
 * @author  Bernard Potocki <bernard.potocki@imanel.org>
 * @author  Stefano Verna <stefano.verna@welaika.com>
 * @licence The MIT licence.
 * @source  http://github.com/socky/socky-js
 */
/*!
 * Simple JavaScript Inheritance
 * By John Resig http://ejohn.org/
 * MIT Licensed.
 *
 * Inspired by base2 and Prototype
 */

(function(){var k=false,m=/xyz/.test(function(){})?/\b_super\b/:/.*/,l=function(){};l.extend=function(a){function b(){!k&&this.init&&this.init.apply(this,arguments)}var c=this.prototype;k=true;var d=new this;k=false;for(var e in a)d[e]=typeof a[e]=="function"&&typeof c[e]=="function"&&m.test(a[e])?function(f,h){return function(){var g=this._super;this._super=c[f];var i=h.apply(this,arguments);this._super=g;return i}}(e,a[e]):a[e];b.prototype=d;b.constructor=b;b.extend=arguments.callee;return b};Events=
l.extend({_bind:function(a,b,c){this._callbacks=this._callbacks||{};this._callbacks[a]||(this._callbacks[a]={});(this._callbacks[a][b]||(this._callbacks[a][b]=[])).push(c);return this},_unbind:function(a,b,c){if(this._callbacks&&!b)this._callbacks[a]={};else if(a=this._callbacks[a])if(c){b=a[b];if(!b)return this;a=0;for(var d=b.length;a<d;a++)if(c===b[a]){b.splice(a,1);break}}else a[b]=[];return this},_trigger:function(a,b){var c,d,e,f;if(!this._callbacks||!(d=this._callbacks[a]))return this;if(d[b]){c=
d[b].slice(0);e=0;for(f=c.length;e<f;e++)c[e].apply(this,Array.prototype.slice.call(arguments,2))}if(d.all){c=d.all.slice(0);e=0;for(f=c.length;e<f;e++)c[e].apply(this,Array.prototype.slice.call(arguments,1))}return this}});this.Socky=Events.extend({init:function(a,b){Socky.Manager.is_inited()||Socky.Manager.init(b.assets_location);this._options=Socky.Utils.extend({},Socky.Manager.default_options(),b,{url:a});this._channels=new Socky.ChannelsCollection(this);this._is_connected=false;this._connection=
this._connection_id=null;Socky.Manager.is_driver_loaded()?this.connect():this.log("WebSocket driver still unavailable, waiting...");this.raw_event_bind("socky:connection:established",Socky.Utils.bind(this._on_connection_established,this));Socky.Manager.add_socky_instance(this)},auth_transport:function(){return this._options.auth_transport},auth_endpoint:function(){return this._options.auth_endpoint},connection_id:function(){return this._connection_id},is_connected:function(){return this._is_connected},
connect:function(){if(window.WebSocket){var a=this._options.url;this.log("connecting",a);this._connection=new WebSocket(a);this._connection.onopen=Socky.Utils.bind(this.on_socket_open,this);this._connection.onmessage=Socky.Utils.bind(this.on_socket_message,this);this._connection.onclose=Socky.Utils.bind(this.on_socket_close,this)}else{this.log("WebSocket unavailable");this._connection={}}},on_socket_open:function(){this.log("connected to socket, waiting for connection_id")},on_socket_message:function(a){this.log("received message",
a.data);a=Socky.Utils.parseJSON(a.data);if(typeof a.data=="string")a.data=Socky.Utils.parseJSON(a.data);this._trigger("raw",a.event,a);this._trigger("public",a.event,a);a.channel&&this._channels.find(a.channel).receive_event(a.event,a)},on_socket_close:function(){this.log("disconnected");this._is_connected=false},log:function(){Socky.Utils.log.apply(Socky.Manager,arguments)},subscribe:function(a,b,c){a=this._channels.add(a,b,c);this._is_connected&&a.subscribe();return a},unsubscribe:function(a){var b=
this._channels.find(a);if(b){this._is_connected&&b.unsubscribe();this._channels.remove(a)}},send:function(a){a.connection_id=this._connection_id;Socky.Utils.log("sending message",JSON.stringify(a));this._connection.send(JSON.stringify(a));return this},raw_event_bind:function(a,b){this._bind("raw",a,b)},raw_event_unbind:function(a,b){this._unbind("raw",a,b)},bind:function(a,b){this._bind("public",a,b)},unbind:function(a,b){this._unbind("public",a,b)},_on_connection_established:function(a){Socky.Utils.log("connection_id",
a.connection_id);this._connection_id=a.connection_id;this._is_connected=true;this._subscribe_pending_channels()},_subscribe_pending_channels:function(){this._channels.each(function(a){a.subscribe()})}});Socky.Utils={breaker:{},log:function(){if(console&&console.log){for(var a=["Socky"],b=0;b<arguments.length;b++)a.push(arguments[b]);console.log(a.join(" : "))}},is_number:function(a){return!!(a===0||a&&a.toExponential&&a.toFixed)},each:function(a,b,c){if(a!=null)if(Array.prototype.forEach&&a.forEach===
Array.prototype.forEach)a.forEach(b,c);else if(Socky.Utils.is_number(a.length))for(var d=0,e=a.length;d<e;d++){if(b.call(c,a[d],d,a)===Socky.Utils.breaker)break}else for(d in a)if(hasOwnProperty.call(a,d))if(b.call(c,a[d],d,a)===Socky.Utils.breaker)break},find:function(a,b,c){var d;Socky.Utils.any(a,function(e,f,h){if(b.call(c,e,f,h)){d=e;return true}});return d},any:function(a,b,c){var d=false;if(a==null)return d;Socky.Utils.each(a,function(e,f,h){if(d=b.call(c,e,f,h))return Socky.Utils.breaker});
return d},extend:function(a){Socky.Utils.each(Array.prototype.slice.call(arguments,1),function(b){for(var c in b)a[c]=b[c]});return a},bind:function(a,b,c){return function(){return a.apply(b,Array.prototype.slice.call(c||[]).concat(Array.prototype.slice.call(arguments)))}},parseJSON:function(a){try{return JSON.parse(a)}catch(b){Socky.Utils.log("data attribute not valid JSON","you may wish to implement your own Socky.Manager.parseJSON");return a}}};Socky.ChannelsCollection=l.extend({each:function(a){Socky.Utils.each(this._channels,
function(b){a(b)})},init:function(a){this._socky=a;this._channels={}},add:function(a,b,c){if(a instanceof Socky.ChannelsCollection)Socky.Utils.extend(this._channels,a._channels);else if(!this.find(a)){var d=null;d=a.indexOf("private-")===0?new Socky.PrivateChannel(a,this._socky,b):a.indexOf("presence-")===0?new Socky.PresenceChannel(a,this._socky,b,c):new Socky.Channel(a,this._socky);return this._channels[a]=d}},find:function(a){return this._channels[a]},remove:function(a){delete this._channels[a]},
channel_names:function(){var a=[],b;for(b in this._channels)a.push(b);return a}});Socky.Channel=Events.extend({init:function(a,b){this._socky=b;this._name=a;this._callbacks={};this._global_callbacks=[];this._subscribed=false;this._auth=null;this.raw_event_bind("socky:subscribe:success",Socky.Utils.bind(this.acknowledge_subscription,this))},disconnect:function(){},acknowledge_subscription:function(){this._subscribed=true},is_private:function(){return false},is_presence:function(){return false},subscribe:function(){if(!this._started_subscribe){this._started_subscribe=
true;var a=this;this.authorize(function(b){a._auth=b.auth;a.send_event("socky:subscribe",a.generate_subscription_payload())})}},generate_subscription_payload:function(){return null},unsubscribe:function(){this.send_event("socky:unsubscribe")},authorize:function(a){a({})},send_event:function(a,b){b=b||{};b.event=a;b.channel=this._name;b.auth=this._auth;this._socky.send(b)},receive_event:function(a,b){this._trigger("raw",b.event,b);this._trigger("public",b.event,b.data)},raw_event_bind:function(a,b){this._bind("raw",
a,b)},raw_event_unbind:function(a,b){this._unbind("raw",a,b)},bind:function(a,b){this._bind("public",a,b)},unbind:function(a,b){this._unbind("public",a,b)},trigger:function(a,b){this.send_event(a,{data:b})}});Socky.PrivateChannel=Socky.Channel.extend({init:function(a,b,c){this._super(a,b);this._permissions=c},is_private:function(){return true},authorize:function(a){this._socky.auth_transport()=="ajax"?this.authorize_via_ajax(a):this.authorize_via_jsonp(a)},generate_subscription_payload:function(){var a=
{};if(this._permissions.read===false)a.read=false;if(this._permissions.write===true)a.write=true;return a},generate_auth_payload:function(){var a={event:"socky:subscribe",channel:this._name,connection_id:this._socky.connection_id()};Socky.Utils.extend(a,this.generate_subscription_payload());return a},authorize_via_ajax:function(a){var b=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");b.open("POST",this._socky.auth_endpoint(),true);b.setRequestHeader("Content-Type",
"application/json");b.onreadystatechange=function(){if(b.readyState==4)if(b.status==200){var d=Socky.Utils.parseJSON(b.responseText);a(d)}else Socky.Utils.log("Couldn't get auth info from your webapp",status)};var c=this.generate_auth_payload();b.send(JSON.stringify(c))},authorize_via_jsonp:function(a){var b=this._name;Socky.Manager._jsonp_auth_callbacks[b]=a;a=this.generate_auth_payload();var c="Socky.Manager._jsonp_auth_callbacks['"+b+"']";b=this._socky.auth_endpoint();b+="?callback="+encodeURIComponent(c);
b+="&payload="+encodeURIComponent(JSON.stringify(a));a=document.createElement("script");a.src=b;b=document.getElementsByTagName("head")[0]||document.documentElement;b.insertBefore(a,b.firstChild)}});Socky.PresenceChannel=Socky.PrivateChannel.extend({init:function(a,b,c,d){this._super(a,b,c);this._members={};this._subscription_data=d;this.bind("socky:member:added",Socky.Utils.bind(this.on_member_added,this));this.bind("socky:member:removed",Socky.Utils.bind(this.on_member_removed,this))},disconnect:function(){this._members=
{}},is_presence:function(){return true},acknowledge_subscription:function(a){this._super(a);this._members=a.members},on_member_added:function(a){this._members[a.connection_id]=a.data;this.trigger("socky:member:added",a.data)},on_member_removed:function(a){var b=this._members[a.connection_id];delete this._members[a.connection_id];this.trigger("socky:member:removed",b)},generate_subscription_payload:function(){var a=this._super();if(this._permissions.hide===true)a.hide=true;a.data=this._subscription_data;
return a},members:function(){return this._members}});Socky.Manager={_is_inited:false,_is_websocket_driver_loaded:false,_jsonp_auth_callbacks:{},_socky_instances:[],_assets_location:"http://js.socky.org/v0.5/assets",_flash_debug:false,_default_options:{debug:false,url:"ws://"+window.location.hostname+":8080/websocket",auth_endpoint:"/socky/auth",auth_transport:"ajax"},is_inited:function(){return this._is_inited},is_driver_loaded:function(){return this._is_websocket_driver_loaded},add_socky_instance:function(a){this._socky_instances.push(a)},
default_options:function(){return this._default_options},set_default_options:function(a){this._default_options=Socky.Utils.extend({},this._default_options,a)},set_assets_location:function(a){this._assets_location=a},set_flash_debug:function(a){this._flash_debug=a},init:function(a){if(!this._is_inited){this._is_inited=true;Socky.Utils.log("inited");a&&this.set_assets_location(a);a=[];var b=Socky.Utils.bind(function(){Socky.Utils.log("Websockets driver loaded");this._web_sockets_loaded()},this);if(window.JSON==
undefined){Socky.Utils.log("no JSON support, requiring it");a.push(this._assets_location+"/json2.min.js")}if(window.WebSocket==undefined){Socky.Utils.log("no WebSocket driver available, requiring it");window.WEB_SOCKET_SWF_LOCATION=this._assets_location+"/WebSocketMain.swf";window.WEB_SOCKET_DEBUG=this._flash_debug;a.push(this._assets_location+"/flashfallback.min.js")}a.length>0?this._require_scripts(a,b):b()}},_web_sockets_loaded:function(){this._is_websocket_driver_loaded=true;Socky.Utils.each(this._socky_instances,
function(a){a.is_connected()||a.connect()})},_require_scripts:function(a,b){var c=0,d;d=document.addEventListener?function(g,i){g.addEventListener("load",i,false)}:function(g,i){g.attachEvent("onreadystatechange",function(){if(g.readyState=="loaded"||g.readyState=="complete")i()})};for(var e=Socky.Utils.bind(function(g){c++;if(a.length==c){Socky.Utils.log("All the require script have been loaded!");setTimeout(g,0)}},this),f=Socky.Utils.bind(function(g,i){i=i||function(){};var n=document.getElementsByTagName("head")[0],
j=document.createElement("script");j.setAttribute("src",g);j.setAttribute("type","text/javascript");j.setAttribute("async",true);Socky.Utils.log("Adding script",g);d(j,function(){e(i)});n.appendChild(j)},this),h=0;h<a.length;h++)f(a[h],b)}}})();

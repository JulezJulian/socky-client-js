/*!
 * Socky JavaScript Library
 *
 * @version 0.5.0-pre
 * @author  Bernard Potocki <bernard.potocki@imanel.org>
 * @author  Stefano Verna <stefano.verna@welaika.com>
 * @licence The MIT licence.
 * @source  http://github.com/socky/socky-js
 */
/*!
 * Simple JavaScript Inheritance
 * By John Resig http://ejohn.org/
 * MIT Licensed.
 *
 * Inspired by base2 and Prototype
 */

(function(){var a=false,b=/xyz/.test(function(){})?/\b_super\b/:/.*/;this.Class=function(){};Class.extend=function(c){function d(){!a&&this.init&&this.init.apply(this,arguments)}var i=this.prototype;a=true;var j=new this;a=false;for(var f in c)j[f]=typeof c[f]=="function"&&typeof i[f]=="function"&&b.test(c[f])?function(e,g){return function(){var k=this._super;this._super=i[e];var h=g.apply(this,arguments);this._super=k;return h}}(f,c[f]):c[f];d.prototype=j;d.constructor=d;d.extend=arguments.callee;
return d}})();
Socky=Class.extend({init:function(a){this._options=a||{};this._channels=new Socky.ChannelCollection;this._is_connected=false;this._connection=this._connection_id=null;SockyManager.is_driver_loaded()&&this.connect();SockyManager.add_socky_instance(this)},is_connected:function(){return this._is_connected},connect:function(){if(window.WebSocket){var a=SockyManager.websocket_url();this.log("connecting",a);this._connection=new WebSocket(a);this._connection.onopen=Socky.Utils.bind(this.on_socket_open,this);
this._connection.onmessage=Socky.Utils.bind(this.on_socket_message,this);this._connection.onclose=Socky.Utils.bind(this.on_socket_close,this)}else{Socky.log("WebSocket unavailable");this._connection={}}},on_socket_open:function(){this.log("connected")},on_socket_message:function(a){this.log("received message",a.data)},on_socket_close:function(){this.log("disconnected")},log:function(){Socky.Utils.log.apply(SockyManager,arguments)},subscribe:function(a){a instanceof Array||(a=[channels]);if(this._is_connected){var b=
this;channel.authorize(this,function(c){b.send_event("socky:subscribe",{channels:a,auth:c.auth});Socky.Utils.each(a,function(d){b._channels.add(d,b)})})}return channel},unsubscribe:function(a){Socky.Utils.each(a,function(b){this._channels.remove(b)});this._is_connected&&this.send_event("socky:unsubscribe",{channels:channel})},send_event:function(a,b,c){Socky.Utils.log("event sent (channels,event,data)",c,a,b);a={event:a,data:b};if(c)a.channels=c;this._connection.send(JSON.stringify(a));return this}});
var SockyManager={_is_websocket_driver_loaded:false,_socky_instances:[],_default_options:{assets_location:"<CDN_LOCATION>",app_name:"",websocket_debug:false,websocket_path:"/websocket",websocket_host:window.location.hostname,websocket_port:8080,websocket_secure:false,channel_auth_endpoint:"/socky/auth",channel_auth_transport:"ajax"},is_driver_loaded:function(){return this._is_websocket_driver_loaded},add_socky_instance:function(a){this._socky_instances.push(a)},websocket_url:function(){var a="ws";
if(this._options.websocket_secure)a+="s";a+="://"+this._options.websocket_host+":"+this._options.websocket_port+this._options.websocket_path+"/"+this._options.app_name;return a},init:function(a){Socky.Utils.log("inited");this._options=Socky.Utils.extend({},this._default_options,a);a=[];var b=Socky.Utils.bind(function(){Socky.Utils.log("Websockets driver loaded");this._web_sockets_loaded()},this);if(window.JSON==undefined){Socky.Utils.log("no JSON support, requiring it");a.push(this._options.assets_location+
"/json2.min.js")}if(window.WebSocket==undefined){Socky.Utils.log("no WebSocket driver available, requiring it");window.WEB_SOCKET_SWF_LOCATION=this._options.assets_location+"/WebSocketMain.swf";window.WEB_SOCKET_DEBUG=this._options.websocket_debug;a.push(this._options.assets_location+"/flashfallback.min.js")}a.length>0?this._require_scripts(a,b):b()},_web_sockets_loaded:function(){this._is_websocket_driver_loaded=true;for(var a=0;a<this._socky_instances.length;a++){var b=this._socky_instances[a];
b.is_connected()||b.connect()}},_require_scripts:function(a,b){var c=0,d;d=document.addEventListener?function(e,g){e.addEventListener("load",g,false)}:function(e,g){e.attachEvent("onreadystatechange",function(){if(e.readyState=="loaded"||e.readyState=="complete")g()})};for(var i=Socky.Utils.bind(function(e){c++;if(a.length==c){Socky.Utils.log("All the require script have been loaded!");setTimeout(e,0)}},this),j=Socky.Utils.bind(function(e,g){g=g||function(){};var k=document.getElementsByTagName("head")[0],
h=document.createElement("script");h.setAttribute("src",e);h.setAttribute("type","text/javascript");h.setAttribute("async",true);Socky.Utils.log("Adding script",e);d(h,function(){i(g)});k.appendChild(h)},this),f=0;f<a.length;f++)j(a[f],b)}};
Socky.Channel=Class.extend({init:function(a,b){this.socky=b;this.name=a;this.callbacks={};this.global_callbacks=[];this.subscribed=false},disconnect:function(){},acknowledge_subscription:function(){this.subscribed=true},bind:function(a,b){this.callbacks[a]=this.callbacks[a]||[];this.callbacks[a].push(b);return this},bind_all:function(a){this.global_callbacks.push(a);return this},trigger:function(a,b){this.socky.send_event(a,b,this.name);return this},dispatch_with_all:function(a,b){this.name!="socky_global_channel"&&
Socky.Utils.log("event recd (channel,event,data)",this.name,a,b);this.dispatch(a,b);this.dispatch_global_callbacks(a,b)},dispatch:function(a,b){var c=this.callbacks[a];if(c)for(var d=0;d<c.length;d++)c[d](b);else this.global||Socky.Utils.log("No callbacks for "+a)},dispatch_global_callbacks:function(a,b){for(var c=0;c<this.global_callbacks.length;c++)this.global_callbacks[c](a,b)},is_private:function(){return false},authorize:function(a,b){b({})}});
Socky.PrivateChannel=Socky.Channel.extend({is_private:function(){return true},authorize:function(a,b){SockyManager.channel_auth_transport()=="ajax"?this.authorize_via_ajax(a,b):this.authorize_via_jsonp(a,b)},authorize_via_ajax:function(a,b){var c=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");c.open("POST",SockyManger.channel_auth_endpoint(),true);c.setRequestHeader("Content-Type","application/x-www-form-urlencoded");c.onreadystatechange=function(){if(c.readyState==
4)if(c.status==200){var d=Socky.Utils.parseJSON(c.responseText);b(d)}else Socky.Utils.log("Couldn't get auth info from your webapp"+status)};c.send("socket_id="+encodeURIComponent(a.socket_id)+"&channel_name="+encodeURIComponent(this.name))},authorize_via_jsonp:function(a,b){var c="socket_id="+encodeURIComponent(a.socket_id)+"&channel_name="+encodeURIComponent(this.name),d=document.createElement("script");Pusher.auth_callbacks[this.name]=b;d.src=Pusher.channel_auth_endpoint+"?callback="+encodeURIComponent("Pusher.auth_callbacks['"+
this.name+"']")+"&"+c;c=document.getElementsByTagName("head")[0]||document.documentElement;c.insertBefore(d,c.firstChild)}});Socky.ChannelCollection=Class.extend({init:function(){this._channels={}},add:function(a,b){var c=this.find(a);if(!c){c=null;c=a.indexOf("private-")===0?new Socky.PrivateChannel(a,b):new Socky.Channel(a,b);this._channels[a]=c}return c},find:function(a){return this._channels[a]},remove:function(a){delete this._channels[a]}});
Socky.Utils={log:function(){if(console&&console.log){for(var a=["Socky"],b=0;b<arguments.length;b++)a.push(arguments[b]);console.log(a.join(" : "))}},is_number:function(a){return!!(a===0||a&&a.toExponential&&a.toFixed)},each:function(a,b,c){if(a!=null)if(Array.prototype.forEach&&a.forEach===Array.prototype.forEach)a.forEach(b,c);else if(Socky.Utils.is_number(a.length))for(var d=0,i=a.length;d<i;d++){if(b.call(c,a[d],d,a)===breaker)break}else for(d in a)if(hasOwnProperty.call(a,d))if(b.call(c,a[d],
d,a)===breaker)break},extend:function(a){Socky.Utils.each(Array.prototype.slice.call(arguments,1),function(b){for(var c in b)a[c]=b[c]});return a},bind:function(a,b,c){return function(){return a.apply(b,Array.prototype.slice.call(c||[]).concat(Array.prototype.slice.call(arguments)))}},parseJSON:function(a){try{return JSON.parse(a)}catch(b){Socky.Utils.log("data attribute not valid JSON","you may wish to implement your own SockyManger.parseJSON");return a}}};
